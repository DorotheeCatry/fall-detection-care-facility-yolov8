# Dockerfile simplifié pour le développement de Sécur'Âge
FROM python:3.12-slim

# Variables d'environnement
ENV PYTHONUNBUFFERED=1 \
    PYTHONDONTWRITEBYTECODE=1 \
    PIP_NO_CACHE_DIR=1

# Installation des dépendances système pour OpenCV et YOLO
RUN apt-get update && apt-get install -y \
    libgl1-mesa-glx \
    libglib2.0-0 \
    libsm6 \
    libxext6 \
    libxrender-dev \
    libgomp1 \
    libgstreamer1.0-0 \
    libgstreamer-plugins-base1.0-0 \
    libgtk-3-0 \
    libavcodec-dev \
    libavformat-dev \
    libswscale-dev \
    libv4l-dev \
    libjpeg-dev \
    libpng-dev \
    libtiff-dev \
    libatlas-base-dev \
    gfortran \
    curl \
    git \
    && rm -rf /var/lib/apt/lists/*

# Installation de Poetry
RUN pip install poetry==1.7.1

# Configuration Poetry
ENV POETRY_NO_INTERACTION=1 \
    POETRY_VENV_IN_PROJECT=1 \
    POETRY_CACHE_DIR=/tmp/poetry_cache

WORKDIR /app

# Copie des fichiers Poetry
COPY pyproject.toml poetry.lock ./

# Installation des dépendances
RUN poetry install && rm -rf $POETRY_CACHE_DIR

# Copie du code source
COPY . .

# Création des dossiers media
RUN mkdir -p media/snapshots media/clips

# Variables d'environnement pour le développement
ENV DJANGO_SETTINGS_MODULE=backend.settings \
    DEBUG=True \
    DJANGO_SECRET_KEY=dev-secret-key-for-docker

# Port exposé
EXPOSE 8000

# Commande de démarrage avec auto-reload
CMD ["poetry", "run", "python", "manage.py", "runserver", "0.0.0.0:8000"]